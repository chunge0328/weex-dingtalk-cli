#!/usr/bin/env node

const chalk = require('chalk');
const moment = require('moment');
const axios =  require('axios');
const env =  require('../src/env.js');
const logger = require('../src/logger.js');

const fail = logger.fail;
const success = logger.success;

console.log()
process.on('exit', function () {
  console.log()
})

const dingtalk_templates = env['dingtalk_templates'];

function fetchTemplates(){
  const url = dingtalk_templates.url;
  return new Promise(function(resolve, reject){
    axios({
      method: 'get',
      url: url,
      headers: {
        'User-Agent': 'dingtalk-cli'
      }
    })
    .then(function(res){
      const data = res.data;
      if (res.status === 200){
        resolve(data);
      } else {
        reject(res);
      }
    })
    .catch(function(err){
      reject(err);
    });
  });
}

success('await ... getting network data');
console.log();

fetchTemplates().then(function(data){
  if (Array.isArray(data)){
    console.log('Available official templates:');
    console.log();
    data.forEach(function(repo){
      console.log(
        ' ' + chalk.yellow('â˜…') +
        ' ' + chalk.blue(repo.name) + 
        ' - ' + repo.description
      );
      console.log(
        '     ' + chalk.green('- pushed at : ') +
        '' + moment(repo.pushed_at).format('YYYY-MM-DD HH:mm:ss:SSS')
      );
      console.log();
    });
    success('done');
  } else {
    fail('Not Found Meta Data');
  }
}).catch(function(err){
  fail(JSON.stringify(err));
});
